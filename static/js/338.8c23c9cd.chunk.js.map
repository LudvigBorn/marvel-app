{"version":3,"file":"static/js/338.8c23c9cd.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/SingleComicLayout/SingleComicLayout.js","components/pages/ComicsPage.js"],"sourcesContent":["import './comicsList.scss';\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport {Link} from 'react-router-dom'\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst ComicsList = () => {\n    const [comicList,setComicList] = useState([]);\n    const [newItemLoading,setNewItemLoading] = useState(false);\n    const [comicEnded,setComicEnded] = useState(false);\n    const [offset,setOffset] = useState(10);\n\n    const {process,setProcess, error,loading,getAllComics} = useMarvelService();\n\n    useEffect(()=> {\n        onRequest(offset,true);\n    },[]);\n\n    const onRequest = (offset,initial) => {\n        setNewItemLoading(!initial)\n        getAllComics(offset)\n        .then(onComicsListLoaded)\n        .then(() => setProcess('confirmed'))\n    }\n\n\n    const onComicsListLoaded = (newComicsList) => {\n\n        const ended = newComicsList.length < 8\n\n        setComicList(comicList => [...comicList,...newComicsList])\n        setNewItemLoading(false)\n        setOffset(offset => offset + 8)\n        setComicEnded(ended)\n    }\n\n\n    function renderItems (arr) {\n\n        const items = arr.map((comics,i) => {\n\n            const price = comics.price ? comics.price : \"NOT AVAILABLE\";\n            return (\n              <li\n                //onClick={() => {props.onComicSelected(comics.id)}}\n                className=\"comics__item\"\n                key={i}\n                tabIndex={0}\n              >\n                <Link to={`${comics.id}`}>\n                  <img\n                    src={comics.thumbnail}\n                    alt={comics.title}\n                    className=\"comics__item-img\"\n                  />\n                  <div className=\"comics__item-name\">{comics.title}</div>\n                  <div className=\"comics__item-price\">{price}</div>\n                </Link>\n              </li>\n            );\n\n        })\n\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    //const items = renderItems(comicList);\n    // const spiner = loading && !newItemLoading ? <Spinner/> : null\n    // const errorMessage = error ? <ErrorMessage/> : null\n\n    return (\n      <div className=\"comics__list\">\n        {/* {errorMessage}\n        {spiner}\n        {items} */}\n        {setContent(process,()=>renderItems(comicList),newItemLoading)}\n\n        <button\n          onClick={() => onRequest(offset)}\n          className=\"button button__main button__long\"\n          disabled = {newItemLoading}\n          style = {{'display': comicEnded ? 'none' : 'block'}}\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    );\n}\n\nexport default ComicsList;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {Link} from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\n\nimport \"./singleComicLayout.scss\";\nconst SingleComicLayout = ({ data }) => {\n  const { title, description, pageCount, price, language, thumbnail } = data;\n  console.log(data);\n  return (\n    <div className=\"single-comic\">\n      <Helmet>\n        <meta name=\"description\" content={`${title} comics book `} />\n        <title>{title}</title>\n      </Helmet>\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{title}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n        <p className=\"single-comic__descr\">{pageCount}</p>\n        <p className=\"single-comic__descr\">Language: {language}</p>\n        <div className=\"single-comic__price\">{price}</div>\n      </div>\n      <Link to=\"..\" className=\"single-comic__back\">\n        Back to all\n      </Link>\n    </div>\n  );\n};\n\nexport default SingleComicLayout;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\nimport  SinglePage  from \"./SinglePage\";\nimport {Routes,Route} from 'react-router-dom'\nimport SingleComicLayout from \"../SingleComicLayout/SingleComicLayout\";\nimport { Helmet } from \"react-helmet\";\n\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Marvel information\" />\n        <title>Comics page</title>\n      </Helmet>\n\n      <AppBanner />\n      <Routes>\n        <Route\n          path=\"/:id\"\n          element={\n            <SinglePage Component={SingleComicLayout} dataType={\"comic\"} />\n          }\n        />\n        <Route path=\"/\" element={<ComicsList />} />\n      </Routes>\n      {/* <ComicsList /> */}\n    </>\n  );\n}\n\nexport default ComicsPage;"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comicList","setComicList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","comicEnded","setComicEnded","_useState7","_useState8","offset","setOffset","_useMarvelService","useMarvelService","setProcess","getAllComics","error","loading","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","_jsxs","className","children","arr","items","map","comics","i","price","tabIndex","Link","to","id","src","thumbnail","alt","title","renderItems","onClick","disabled","style","avengers","avengersLogo","_ref","data","description","pageCount","language","console","log","Helmet","name","content","_Fragment","AppBanner","Routes","Route","path","element","SinglePage","SingleComicLayout","dataType","ComicsList"],"sourceRoot":""}